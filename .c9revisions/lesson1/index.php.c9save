{"ts":1366903682798,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\r\n\r\nclass SelfOrderingArray{\r\npublic $arr = array();\r\npublic $type = '';\r\n\r\npublic function _constructor($type = 'NUMERIC', $defaultArr = array()){\r\n $this->type = $type;\r\n $this->arr = $defaultArr;\r\n}\r\n\r\npublic function addElement($el){\r\n array_push($this->arr, $el);\r\nif($this->type == 'NUMERIC'){\r\nsort($this->arr, SORT_NUMERIC);\r\n}\r\nelseif($this->type == 'STRING'){\r\nsort($this->arr, SORT_STRING);\r\n}\r\nelse{\r\nsort($this->arr, SORT_REGULAR);\r\n}\r\nreturn $this->arr;\r\n}\r\n\r\n}\r\n\r\n$newArr = new SelfOrderingArray('STRING', array('orange', 'apple', 'watermelon');\r\n$newArr->addElement('pear');\r\n\r\n?>"]],"start1":0,"start2":0,"length1":0,"length2":601}]],"length":601}
{"contributors":[],"silentsave":false,"ts":1366903895763,"patch":[[{"diffs":[[0,"Array{\r\n"],[-1,"public"],[1,"    private"],[0," $arr = "]],"start1":27,"start2":27,"length1":22,"length2":27},{"diffs":[[0,"ray();\r\n"],[-1,"public"],[1,"    private"],[0," $type ="]],"start1":56,"start2":56,"length1":22,"length2":27},{"diffs":[[0,"pe = '';\r\n\r\n"],[1,"    "],[0,"public funct"]],"start1":79,"start2":79,"length1":24,"length2":28},{"diffs":[[0,"ay()){\r\n"],[1,"       "],[0," $this->"]],"start1":160,"start2":160,"length1":16,"length2":23},{"diffs":[[0,"$type;\r\n"],[1,"       "],[0," $this->"]],"start1":190,"start2":190,"length1":16,"length2":23},{"diffs":[[0,"ltArr;\r\n"],[1,"    "],[0,"}\r\n\r\n"],[1,"    "],[0,"public f"]],"start1":225,"start2":225,"length1":21,"length2":29},{"diffs":[[0,"($el){\r\n"],[1,"      "],[0," array_p"]],"start1":272,"start2":272,"length1":16,"length2":22},{"diffs":[[0," $el);\r\n"],[1,"       "],[0,"if($this"]],"start1":309,"start2":309,"length1":16,"length2":23},{"diffs":[[0,"NUMERIC'){\r\n"],[1,"        "],[0,"sort($this->"]],"start1":343,"start2":343,"length1":24,"length2":32},{"diffs":[[0,"_NUMERIC);\r\n"],[-1,"}\r\n"],[1,"    }\r\n    "],[0,"elseif($this"]],"start1":384,"start2":384,"length1":27,"length2":35},{"diffs":[[0,"ING'){\r\n"],[1,"        "],[0,"sort($th"]],"start1":433,"start2":433,"length1":16,"length2":24},{"diffs":[[0,");\r\n"],[-1,"}\r\nelse{\r\n"],[1,"    }\r\n    else{\r\n        "],[0,"sort"]],"start1":477,"start2":477,"length1":18,"length2":34},{"diffs":[[0,"ULAR);\r\n"],[-1,"}\r\n"],[1,"    }\r\n    "],[0,"return $"]],"start1":532,"start2":532,"length1":19,"length2":27},{"diffs":[[0,"arr;\r\n}\r"],[1,"\n    public function getArray(){\r\n        return $this->arr;\r\n    }\r"],[0,"\n\r\n}\r\n\r\n"]],"start1":565,"start2":565,"length1":16,"length2":84},{"diffs":[[0,"t('pear'"],[-1,""],[0,""],[1,");\r\nprint_r($newArr->getArray()"],[0,");\r\n\r\n?>"]],"start1":750,"start2":750,"length1":16,"length2":47}]],"length":797,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366903936311,"patch":[[{"diffs":[[0,"Array{\r\n"],[-1,"    private"],[1,"public"],[0," $arr = "]],"start1":27,"start2":27,"length1":27,"length2":22},{"diffs":[[0,");\r\n"],[-1,"    private"],[1,"public"],[0," $ty"]],"start1":55,"start2":55,"length1":19,"length2":14},{"diffs":[[0,"pe = '';\r\n\r\n"],[-1,"    "],[0,"public funct"]],"start1":69,"start2":69,"length1":28,"length2":24},{"diffs":[[0,"ay()){\r\n"],[-1,"       "],[0," $this->"]],"start1":146,"start2":146,"length1":23,"length2":16},{"diffs":[[0,"$type;\r\n"],[-1,"       "],[0," $this->"]],"start1":169,"start2":169,"length1":23,"length2":16},{"diffs":[[0,"r;\r\n"],[-1,"    "],[0,"}\r\n\r\n"],[-1,"    "],[0,"publ"]],"start1":201,"start2":201,"length1":21,"length2":13},{"diffs":[[0,"($el){\r\n"],[-1,"      "],[0," array_p"]],"start1":236,"start2":236,"length1":22,"length2":16},{"diffs":[[0," $el);\r\n"],[-1,"       "],[0,"if($this"]],"start1":267,"start2":267,"length1":23,"length2":16},{"diffs":[[0,"NUMERIC'){\r\n"],[-1,"        "],[0,"sort($this->"]],"start1":294,"start2":294,"length1":32,"length2":24},{"diffs":[[0,"_NUMERIC);\r\n"],[-1,"    }\r\n    "],[1,"}\r\n"],[0,"elseif($this"]],"start1":327,"start2":327,"length1":35,"length2":27},{"diffs":[[0,"ING'){\r\n"],[-1,"        "],[0,"sort($th"]],"start1":368,"start2":368,"length1":24,"length2":16},{"diffs":[[0,");\r\n"],[-1,"    }\r\n    else{\r\n        "],[1,"}\r\nelse{\r\n"],[0,"sort"]],"start1":404,"start2":404,"length1":34,"length2":18},{"diffs":[[0,");\r\n"],[-1,"    }\r\n    "],[1,"}\r\n"],[0,"retu"]],"start1":447,"start2":447,"length1":19,"length2":11},{"diffs":[[0,"\r\n}\r"],[-1,"\n    public function getArray(){\r\n        return $this->arr;\r\n    }\r"],[0,"\n\r\n}"]],"start1":472,"start2":472,"length1":76,"length2":8},{"diffs":[[0,"ear'"],[-1,");\r\nprint_r($newArr->getArray()"],[0,""],[1,""],[0,");\r\n"]],"start1":589,"start2":589,"length1":39,"length2":8}]],"length":601,"saved":false}
{"ts":1366903937174,"patch":[[{"diffs":[[0,"Array{\r\n"],[-1,"public"],[1,"    private"],[0," $arr = "]],"start1":27,"start2":27,"length1":22,"length2":27},{"diffs":[[0,"ray();\r\n"],[-1,"public"],[1,"    private"],[0," $type ="]],"start1":56,"start2":56,"length1":22,"length2":27},{"diffs":[[0,"pe = '';\r\n\r\n"],[1,"    "],[0,"public funct"]],"start1":79,"start2":79,"length1":24,"length2":28},{"diffs":[[0,"ay()){\r\n"],[1,"       "],[0," $this->"]],"start1":160,"start2":160,"length1":16,"length2":23},{"diffs":[[0,"$type;\r\n"],[1,"       "],[0," $this->"]],"start1":190,"start2":190,"length1":16,"length2":23},{"diffs":[[0,"ltArr;\r\n"],[1,"    "],[0,"}\r\n\r\n"],[1,"    "],[0,"public f"]],"start1":225,"start2":225,"length1":21,"length2":29},{"diffs":[[0,"($el){\r\n"],[1,"      "],[0," array_p"]],"start1":272,"start2":272,"length1":16,"length2":22},{"diffs":[[0," $el);\r\n"],[1,"       "],[0,"if($this"]],"start1":309,"start2":309,"length1":16,"length2":23},{"diffs":[[0,"NUMERIC'){\r\n"],[1,"        "],[0,"sort($this->"]],"start1":343,"start2":343,"length1":24,"length2":32},{"diffs":[[0,"_NUMERIC);\r\n"],[-1,"}\r\n"],[1,"    }\r\n    "],[0,"elseif($this"]],"start1":384,"start2":384,"length1":27,"length2":35},{"diffs":[[0,"ING'){\r\n"],[1,"        "],[0,"sort($th"]],"start1":433,"start2":433,"length1":16,"length2":24},{"diffs":[[0,");\r\n"],[-1,"}\r\nelse{\r\n"],[1,"    }\r\n    else{\r\n        "],[0,"sort"]],"start1":477,"start2":477,"length1":18,"length2":34},{"diffs":[[0,"ULAR);\r\n"],[-1,"}\r\n"],[1,"    }\r\n    "],[0,"return $"]],"start1":532,"start2":532,"length1":19,"length2":27},{"diffs":[[0,"arr;\r\n}\r"],[1,"\n    public function getArray(){\r\n        return $this->arr;\r\n    }\r"],[0,"\n\r\n}\r\n\r\n"]],"start1":565,"start2":565,"length1":16,"length2":84},{"diffs":[[0,"t('pear'"],[-1,""],[0,""],[1,");\r\nprint_r($newArr->getArray()"],[0,");\r\n\r\n?>"]],"start1":750,"start2":750,"length1":16,"length2":47}]],"length":797,"saved":false}
{"ts":1366904043995,"patch":[[{"diffs":[[0,"rmelon')"],[1,")"],[0,";\r\n$newA"]],"start1":721,"start2":721,"length1":16,"length2":17}]],"length":798,"saved":false}
{"ts":1366904059951,"patch":[[{"diffs":[[0,");\r\n"],[-1,"print_r"],[1,"var_dump"],[0,"($ne"]],"start1":759,"start2":759,"length1":15,"length2":16}]],"length":799,"saved":false}
{"ts":1366904087919,"patch":[[{"diffs":[[0,"on'));\r\n"],[1,"\r\n"],[0,"$newArr-"]],"start1":725,"start2":725,"length1":16,"length2":18}]],"length":801,"saved":false}
{"ts":1366904089848,"patch":[[{"diffs":[[0,"on'));\r\n"],[1,"var_dump"],[0,"\r\n$newAr"]],"start1":725,"start2":725,"length1":16,"length2":24}]],"length":809,"saved":false}
{"ts":1366904090964,"patch":[[{"diffs":[[0,"var_dump"],[1,"()"],[0,"\r\n$newAr"]],"start1":733,"start2":733,"length1":16,"length2":18}]],"length":811,"saved":false}
{"ts":1366904097023,"patch":[[{"diffs":[[0,"ar_dump("],[1,"$newArr"],[0,")\r\n$newA"]],"start1":734,"start2":734,"length1":16,"length2":23}]],"length":818,"saved":false}
{"ts":1366904098160,"patch":[[{"diffs":[[0,"($newArr"],[1,"-"],[0,")\r\n$newA"]],"start1":741,"start2":741,"length1":16,"length2":17}]],"length":819,"saved":false}
{"ts":1366904098990,"patch":[[{"diffs":[[0,"$newArr-"],[1,">"],[0,")\r\n$newA"]],"start1":742,"start2":742,"length1":16,"length2":17}]],"length":820,"saved":false}
{"ts":1366904101107,"patch":[[{"diffs":[[0,"newArr->"],[1,"getArray()"],[0,")\r\n$newA"]],"start1":743,"start2":743,"length1":16,"length2":26}]],"length":830,"saved":false}
{"ts":1366904103624,"patch":[[{"diffs":[[0,"Array())"],[1,";"],[0,"\r\n$newAr"]],"start1":754,"start2":754,"length1":16,"length2":17}]],"length":831,"saved":false}
{"ts":1366904116615,"patch":[[{"diffs":[[0,"efaultArr;\r\n"],[1,"        \r\n"],[0,"    }\r\n\r\n   "]],"start1":221,"start2":221,"length1":24,"length2":34}]],"length":841,"saved":false}
{"ts":1366904133941,"patch":[[{"diffs":[[0,"unction "],[1,"_"],[0,"_constru"]],"start1":103,"start2":103,"length1":16,"length2":17}]],"length":842,"saved":false}
{"ts":1366904174465,"patch":[[{"diffs":[[0,"\r\n    pr"],[-1,"ivate"],[1,"otected"],[0," $arr = "]],"start1":33,"start2":33,"length1":21,"length2":23}]],"length":844,"saved":false}
{"ts":1366904175457,"patch":[[{"diffs":[[0,"   priva"],[-1,"te"],[0," $type ="]],"start1":67,"start2":67,"length1":18,"length2":16}]],"length":842,"saved":false}
{"ts":1366904176563,"patch":[[{"diffs":[[0,"  pr"],[-1,"iva"],[1,"ot"],[0," $ty"]],"start1":68,"start2":68,"length1":11,"length2":10}]],"length":841,"saved":false}
{"ts":1366904177800,"patch":[[{"diffs":[[0,"    prot"],[1,"ected"],[0," $type ="]],"start1":66,"start2":66,"length1":16,"length2":21}]],"length":846,"saved":false}
{"ts":1366904213782,"patch":[[{"diffs":[[0,"onstruct"],[-1,"or"],[0,"($type ="]],"start1":118,"start2":118,"length1":18,"length2":16}]],"length":844,"saved":false}
{"ts":1366904220317,"patch":[[{"diffs":[[0,");\r\n"],[-1,"var_dump($newArr->getArray());\r\n"],[0,"$new"]],"start1":742,"start2":742,"length1":40,"length2":8}]],"length":812,"saved":false}
{"ts":1366904231455,"patch":[[{"diffs":[[0,");\r\n"],[-1,"var_dump"],[1,"print_r"],[0,"($ne"]],"start1":772,"start2":772,"length1":16,"length2":15}]],"length":811,"saved":false}
